SessionFactory 
	contains the relationships between the application and  database.
	usually one of this per application. it encapsulate all the objects 
	related to mapping POJOs to db tables and columns, which is contained 
	in Metadata source object.
Session
	represent interaction with database when the connection is established.
	build when it needed. when interactiong with db done we immediately close the session.
Transaction
	represnt a unit of work that must be performed on the db.
	can contain more than one query.
	-Begin the work -Perform all queries -Success ? Commit : RollBack;
	
---------------------------------------------------------------------------------------------------------------

Hibernate & Spring

SessionFactory ---> Spring framework's (LocalSessionFactoryBean)
	spring will manage it at the runtime.

we'll configure the data source separately using a third party
library from apache called DBCB(Database Connection Pooling).
	db connection pool
		keep #of db connections alive, and then
		reuse them when thry're needed.(because db connection take sometimes to establish)

Configurations:
	In hibernate we write the configuration settings for the data source in xml file.
	In Spring, we will configure the data source as a Spring Bean(connection url, db driver,..).
