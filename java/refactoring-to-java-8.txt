Refactoring: 
   taking existing code changing its structure and end up with code
   that does the same as before but has better structure.

   types:
     . safe: we can apply it automatically or semi-automatically to our code to produce better code,
       unfortunately even the safe are not without risk.
       - so in existing code if u need to add functionality somewhere, at that point
         u can refactor to make that more easier and quicker. -> u can safe time with refactoring.
          - what u don't want to do is going to ur code and doing change without very good reason
            because changes introduce bugs.
            - make sure u have safety net[unit & integration test] before making change to ur code.
      ex: removing unnecessary boxing and unboxing.
     . risky